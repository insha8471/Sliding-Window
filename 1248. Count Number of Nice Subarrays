Approach: Sliding Window

Time complexity : O(n)
Space complexity : O(1)

class Solution {
    public int helper(int[] nums, int k){
        int n = nums.length;
        int i=0;
        int j = 0;
        int sum = 0;
        int res = 0;

        while(j < n){
            sum += (nums[j]%2);

            while(sum > k){
                sum -= nums[i] % 2;
                i++;
            }

            res += j-i+1;
            j++;
        }
        return res;
    }
    public int numberOfSubarrays(int[] nums, int k) {
        return helper(nums,k)-helper(nums, k-1);       
    }
}
